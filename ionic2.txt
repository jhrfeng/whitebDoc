app.module.ts

import { HttpModule } from '@angular/http';
...
@NgModule({
    ...
    imports: [
        BrowserModule,
        HttpModule,
        IonicModule.forRoot(MyApp),
    ],
...
MyPage.ts

import { Http } from '@angular/http';
import 'rxjs/add/operator/map';
import 'rxjs/add/operator/timeout';
...
constructor(public navCtrl: NavController, public navParams: NavParams, public http: Http) {
    }
...

ETPhoneHome() {
        let path = 'http://localhost:8080/foo';
        let encodedPath = encodeURI(path);
        let timeoutMS = 10000;

        this.http.get(encodedPath)
            .timeout(timeoutMS)
            .map(res => res.json()).subscribe(data => {
                let responseData = data;
                console.log(responseData);
            },
            err => {
                console.log('error in ETPhoneHome');
            });
    }


<<<<<<< HEAD
http://www.cnblogs.com/happen-/p/6138712.html  iframe ios权限

=======
http://blog.csdn.net/tongxinxiao/article/details/70941688
>>>>>>> b5870541408959a39ded8e1d39d67d6161eddda6

http://www.jianshu.com/p/9c00358bcc44

https://ionicacademy.com/ionic-include-css-files-from-npm/ 外部npm


https://www.npmjs.com/package/ionic2-jpush

disable chrome://inspect debugging in IONIC2 app

n the AndroidManifest.xml there should be a android:debuggable="true" attribute on the <application> element. If you remove that and build the app, it shouldn't be debuggable anymore.

I think when you build your Android app using command ionic build android --release it won't add the android:debuggable property to the manifest xml.


------------------------------------------------

http://www.ionic-china.com/doc/ionic-debug.html#RemoteDebugging  调试

{{data?.xxx}}  //?.安全道航符确认为null不会报错

 使用原生打开页面
 Native Page Transitions
 https://ionicframework.com/docs/native/native-page-transitions/

 http://tvboxnow.com/forum-38-1.html

[ion-col]
The available attributes are: width-10, width-20, width-25, width-33, width-50, width-67, width-75, width-80, width-90




 ionic2点击事件感觉到延迟的解决办法
 <div
tappable (click)="doClick()">I
 am clickable!</div>



dissmiss是关闭modal,同时也可以接受参数

ondiddissmiss是监听modal关闭事件，同时可以回调关闭传递的参数
-------------------------------------------------------------------

EventEmitter

SlideOptions


@飘渺秦风 帅哥， 我看你根骨奇迹，现在就缺一些根基。

现有一套国外牛逼大神开发的ionic2 布局源码30套+， 原价24美金（170块RMB）
提供24小时技术支持
提供APP内容更新
提供APP版本更新
提供后续所有源码获取


在应用商店搜一下“Allow-Control-Allow-Origin: ”就ok了

这个坑我也遇到过，整个过程我都写在我的博客里了：http://www.haoguangbo.com/arc...

简单来说，因为真机里网页的访问走的是file://协议，而非http://或https://，因此不会出现跨域问题，但是浏览器里开发调试的时候，由于实际上是ionic的CLI在本地跑了一个小服务器，网页等资源都是通过http加载的，就会出现跨域问题。
解决这个其实很简单，后端服务器不需要做任何处理，只需要在ionic的配置文件（ionic.config.js）里加上proxy这个字段，如下所示：

{
  "name": "appname",
  "email": "",
  "app_id": "",
  "proxies": [
    {
      "path": "/api",
      "proxyUrl": "https://api.instagram.com/api"
    }
  ]
}
然后，在想访问https://api.instagram.com/api/xxx的时候，就改成访问/api/xxx，ionic会自动把以http://localhost:8000/api开头的请求都转发到https://api.instagram.com/api，就像shadowsocks一样。
最后重新ionic serve重启一下ionic就可以了。
这个问题，ionic团队真应该写到官方文档里，实在是坑了太多的人了。
希望能帮到题主。